version: 0.2
env:
  parameter-store:
    DOCKER_REGISTRY_USERNAME: /calcu_python/docker-credentials/Username
    DOCKER_REGISTRY_PASSWORD: /calcu_python/docker-credentials/Password
    DOCKER_REGISTRY_URL: /calcu_python/docker-registry/Url

phases:
  install:
    runtime-versions:
      python: 3.11 # Replace with your Python version
    commands:
      - echo "Installing dependencies..."
      - pip install -r requirements.txt # Install dependencies
      - echo "Dependencies installed."

  pre_build:
    commands:
      - echo "Running pre-build phase..."
      - docker --version # Check Docker version to ensure Docker is installed
      - echo "Docker is installed."

  build:
    commands:
      - echo "Logging into Docker registry..."
      - echo "$DOCKER_REGISTRY_PASSWORD" | docker login --username "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY_URL" # Login to Docker registry
      - echo "Building the Docker image..."
      - docker build -t "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/demo_calcu_python:latest" . # Build the Docker image using Dockerfile
      - echo "Docker image build complete."
      - echo "Logging into Docker registry..."
      - echo "$DOCKER_REGISTRY_PASSWORD" | docker login --username "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY_URL"
      - echo "Pushing Docker image to registry..."
      - docker push "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/demo_calcu_python:latest"

  post_build:
    commands:
      - echo "Post-build phase:Docker image ready."
      - echo "Build complete."

artifacts:
  files:
    - "**/*"
    - "!tests/*" # Exclude tests folder if not needed
    - "!README.md" # Exclude README from deployment if not required
    - "!requirements.txt" # Exclude requirements.txt if not needed
    - "!Dockerfile" # Exclude Dockerfile if not required

cache:
  paths:
    - "/root/.cache/pip" # Cache pip dependencies
